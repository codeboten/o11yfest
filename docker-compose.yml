version: "3.7"
services:

  #####################################
  # Applications generating telemetry #
  #####################################
  shopper:
    image: codeboten/shopper:chapter11
    environment:
      - OTEL_EXPORTER_OTLP_ENDPOINT=opentelemetry-collector:4317
      - OTEL_EXPORTER_OTLP_INSECURE=true
      - GROCERY_STORE_URL=http://grocery-store:5000/products
    networks:
      - o11yfest
    depends_on:
      - grocery-store
      - opentelemetry-collector
    stop_grace_period: 100ms
  grocery-store:
    image: codeboten/grocery-store:chapter11
    container_name: grocery-store
    environment:
      - OTEL_EXPORTER_OTLP_ENDPOINT=opentelemetry-collector:4317
      - OTEL_EXPORTER_OTLP_INSECURE=true
      - OTEL_SERVICE_NAME=grocery-store
      - INVENTORY_URL=http://legacy-inventory:5001/inventory
    networks:
      - o11yfest
    depends_on:
      - legacy-inventory
      - opentelemetry-collector
    cap_add:
      - NET_ADMIN
    ports:
      - 5000:5000
  legacy-inventory:
    image: codeboten/legacy-inventory:chapter11
    container_name: inventory
    environment:
      - OTEL_EXPORTER_OTLP_ENDPOINT=opentelemetry-collector:4317
      - OTEL_EXPORTER_OTLP_INSECURE=true
      - OTEL_SERVICE_NAME=inventory
    networks:
      - o11yfest
    depends_on:
      - opentelemetry-collector
    ports:
      - 5001:5001

  #####################################
  # OpenTelemetry Collector           #
  #####################################
  opentelemetry-collector:
    image: codeboten/collector:0.45.0
    container_name: opentelemetry-collector
    volumes:
      - ./config/collector/config.yml/:/etc/opentelemetry-collector.yml
      - /var/run/docker.sock:/var/run/docker.sock
    command:
      - "--config=/etc/opentelemetry-collector.yml"
    networks:
      - o11yfest
    ports:
      - 4317:4317
      - 13133:13133
      - 8889:8889

  #####################################
  # Backends                          #
  #####################################
  zipkin:
    image: openzipkin/zipkin:2.23
    container_name: zipkin
    ports:
      - 9411:9411
    networks:
      - o11yfest
  jaeger:
    image: jaegertracing/all-in-one:1.29.0
    container_name: jaeger
    ports:
      - 6831:6831/udp
      - 16686:16686
    networks:
      - o11yfest
  prometheus:
    image: prom/prometheus:v2.29.2
    container_name: prometheus
    volumes:
      - ./config/prometheus/config.yml/:/etc/prometheus/prometheus.yml
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--enable-feature=exemplar-storage"
    ports:
      - 9090:9090
    networks:
      - o11yfest
  loki:
    image: grafana/loki:2.3.0
    container_name: loki
    ports:
      - 3100:3100
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - o11yfest
  grafana:
    image: grafana/grafana:8.3.3
    container_name: grafana
    ports:
      - 3000:3000
    volumes:
      - ./config/grafana/provisioning:/etc/grafana/provisioning
    networks:
      - o11yfest
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ORG_ROLE=viewer
      - GF_AUTH_DISABLE_LOGIN_FORM=true
      - GF_USERS_DEFAULT_THEME=light

networks:
  o11yfest:
